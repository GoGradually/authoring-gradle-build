/*
 * This source file was generated by the Gradle 'init' task
 */
package license

import org.gradle.api.DefaultTask
import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.file.DirectoryProperty
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.InputDirectory
import org.gradle.api.tasks.TaskAction

/**
 * A simple 'hello world' plugin.
 */
class LicensePlugin implements Plugin<Project> {
    void apply(Project project) {
        // Register a task
        project.tasks.register("license", LicenseTask) { task ->
            task.setDescription("add a license header to source code")
            sourceDir.set(project.layout.settingsDirectory)
            task.setGroup("from license plugin")
        }
        project.tasks.register("greeting") {
            doLast {
                println("Hello from plugin 'com.tutorial.greeting'")
            }
        }
    }
}
abstract class LicenseTask extends DefaultTask {
    @Input
    def licenseFilePath = project.layout.settingsDirectory.file("license.txt").asFile.path
    @InputDirectory
    abstract DirectoryProperty getSourceDir()

    @TaskAction
    void action() {
        // Read the license text
        def licenseText = new File(licenseFilePath).text
        // Walk the directories looking for java files
        getSourceDir().get().asFile.eachFileRecurse { file ->
            int lastIndexOf = file.getName().lastIndexOf('.')
            if ((lastIndexOf != -1) && (file.getName().substring(lastIndexOf)) == ".java") {// Read the source code
                def content = file.getText()
                //println(licenseText + '\n' + content)
                // Write the license and the source code to the file
                file.text = licenseText + '\n' + content
            }
        }
    }
}